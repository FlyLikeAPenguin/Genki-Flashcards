{"version":3,"sources":["Card/Card.jsx","DrawButton/DrawButton.jsx","LessonSideBar/Lesson/Lesson.jsx","LessonSideBar/LessonSideBar.jsx","Header/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","Kanji","Reading","Definition","DrawButton","drawCard","bind","this","onClick","Component","Lesson","toggleClass","state","lesson","currentLesson","active","setState","number","LessonSideBar","lessons","toggleAllLessons","activeLessons","length","map","Header","target","rel","href","lessonNumbers","Array","from","Set","cards","x","sort","a","b","App","updateCard","currentCard","n","filter","k","activelessons","disableAllLessons","forEach","find","y","currentCards","l","flat","card","Math","floor","random","getRandomCard","persistState","localStorage","getItem","console","log","setActiveLessons","JSON","parse","e","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e07eb14c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-inner\">\r\n      <div className=\"card-front\">\r\n        <div className=\"kanji\">{props.Kanji}</div>\r\n      </div>\r\n\r\n      <div className=\"card-back\">\r\n        <div className=\"reading\">{props.Reading}</div>\r\n        <div className=\"definition\">{props.Definition}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Card;\r\n","import React, { Component } from \"react\";\r\nimport \"./DrawButton.css\";\r\n\r\nclass DrawButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.drawCard = this.drawCard.bind(this);\r\n  }\r\n\r\n  drawCard() {\r\n    this.props.drawCard();\r\n  }\r\n\r\n  render(props) {\r\n    return (\r\n      <div className=\"buttonContainer\">\r\n        <button className=\"btn\" onClick={this.drawCard}>\r\n          Draw Card\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DrawButton;\r\n","import React, { Component } from \"react\";\r\nimport \"./Lesson.css\";\r\nimport { MdDone, MdClear } from \"react-icons/md\";\r\n\r\nclass Lesson extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggleClass = this.toggleClass.bind(this);\r\n\r\n    this.state = {\r\n      lesson: props.lesson,\r\n    };\r\n  }\r\n\r\n  toggleClass() {\r\n    const currentLesson = this.state.lesson;\r\n    currentLesson.active = !currentLesson.active;\r\n    this.setState({ lesson: currentLesson });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <li className=\"lesson-list-item\" onClick={this.toggleClass}>\r\n        Lesson {this.props.lesson.number}\r\n        {this.state.lesson.active ? (\r\n          <MdDone className=\"icon\" />\r\n        ) : (\r\n          <MdClear className=\"icon\" />\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Lesson;\r\n","import React, { Component } from \"react\";\r\nimport \"./LessonSideBar.css\";\r\nimport Lesson from \"./Lesson/Lesson\";\r\n\r\nclass LessonSideBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      lessons: props.lessons,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul className=\"side-lessons\">\r\n          <li\r\n            className=\"lesson-list-item\"\r\n            onClick={this.props.toggleAllLessons}>\r\n            {this.props.activeLessons.length === 0 ? \"All\" : \"None\"}\r\n          </li>\r\n          {this.state.lessons.map((lesson) => (\r\n            <Lesson key={lesson.number} lesson={lesson} />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LessonSideBar;\r\n","import React from \"react\";\r\nimport { AiFillGithub } from \"react-icons/ai\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => (\r\n  <div className=\"topnav\">\r\n    <ul>\r\n      <li className=\"topnav-bold\">Kanji/Kana Flashcards</li>\r\n      <li className=\"topnav-right\">\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n          href=\"https://github.com/FlyLikeAPenguin/React-Flashcards\"\r\n          className=\"topnav-light\">\r\n          View on Github &nbsp;\r\n          <AiFillGithub className=\"icon\" />\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"./Card/Card\";\r\nimport \"./App.css\";\r\nimport DrawButton from \"./DrawButton/DrawButton\";\r\nimport cards from \"./Data/cards.json\";\r\nimport LessonSideBar from \"./LessonSideBar/LessonSideBar\";\r\nimport Header from \"./Header/Header\";\r\n\r\nconst lessonNumbers = Array.from(new Set(cards.map((x) => x.Lesson))).sort(\r\n  (a, b) => a - b\r\n);\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateCard = this.updateCard.bind(this);\r\n    this.toggleAllLessons = this.toggleAllLessons.bind(this);\r\n\r\n    this.state = {\r\n      currentCard: {},\r\n\r\n      lessons: lessonNumbers.map((n) => ({\r\n        number: n,\r\n        active: true,\r\n        cards: cards.filter((k) => k.Lesson === n),\r\n      })),\r\n    };\r\n  }\r\n\r\n  setActiveLessons(activelessons) {\r\n    this.disableAllLessons();\r\n    activelessons.forEach(\r\n      (x) => (this.state.lessons.find((y) => y.number === x).active = true)\r\n    );\r\n  }\r\n\r\n  disableAllLessons() {\r\n    this.state.lessons.forEach((x) => (x.active = false));\r\n  }\r\n\r\n  toggleAllLessons() {\r\n    // If we currently have no active lessons, make them all active.\r\n    const active = this.activeLessons().length === 0;\r\n    this.state.lessons.forEach((x) => (x.active = active));\r\n    this.updateCard();\r\n  }\r\n\r\n  activeLessons() {\r\n    return this.state.lessons.filter((x) => x.active);\r\n  }\r\n\r\n  getRandomCard() {\r\n    var currentCards = this.state.lessons\r\n      .filter((l) => l.active === true)\r\n      .map((x) => x.cards)\r\n      .flat();\r\n\r\n    var randomIndex = Math.floor(Math.random() * currentCards.length);\r\n    var card = currentCards[randomIndex];\r\n    if (card === this.state.currentCard && card != null) {\r\n      this.getRandomCard();\r\n    }\r\n\r\n    return card;\r\n  }\r\n\r\n  updateCard() {\r\n    this.setState({\r\n      currentCard: this.getRandomCard(),\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const persistState = localStorage.getItem(\"active-lessons\");\r\n    console.log(persistState);\r\n    if (persistState) {\r\n      try {\r\n        this.setActiveLessons(JSON.parse(persistState).map((x) => x.number));\r\n      } catch (e) {\r\n        // is not json\r\n      }\r\n    }\r\n    this.setState({\r\n      currentCard: this.getRandomCard(),\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    localStorage.setItem(\r\n      \"active-lessons\",\r\n      JSON.stringify(this.activeLessons())\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <LessonSideBar\r\n          activeLessons={this.activeLessons()}\r\n          lessons={this.state.lessons}\r\n          toggleAllLessons={this.toggleAllLessons}\r\n        />\r\n        <div className=\"cardRow\">\r\n          <Card\r\n            Kanji={this.state.currentCard?.Kanji}\r\n            Definition={this.state.currentCard?.Definition}\r\n            Reading={this.state.currentCard?.Reading}\r\n          />\r\n        </div>\r\n        <div className=\"buttonRow\">\r\n          <DrawButton drawCard={this.updateCard} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}