{"version":3,"sources":["Card/Card.jsx","DrawButton/DrawButton.jsx","LessonSideBar/Lesson/Lesson.jsx","LessonSideBar/LessonSideBar.jsx","Header/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","flipDirection","className","isFlipped","this","props","flipOnClick","onClick","flipCard","style","background","borderRadius","boxShadow","padding","display","Prompt","Reading","Definition","Component","DrawButton","drawCard","bind","Lesson","toggleClass","state","lesson","currentLesson","active","setState","number","LessonSideBar","lessons","toggleAllLessons","activeLessons","length","map","Header","target","rel","href","lessonNumbers","Array","from","Set","cards","x","sort","a","b","App","updateCard","currentCard","n","filter","k","activelessons","disableAllLessons","forEach","find","y","currentCards","l","flat","card","Math","floor","random","getRandomCard","flipState","setTimeout","persistState","localStorage","getItem","setActiveLessons","JSON","parse","e","console","log","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7e6eb7d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Card.css\";\r\nimport Flippy, { FrontSide, BackSide } from \"react-flippy\";\r\nclass Card extends Component {\r\n  render() {\r\n    return (\r\n      <Flippy\r\n        flipDirection=\"horizontal\"\r\n        className=\"card\"\r\n        isFlipped={this.props.isFlipped}\r\n        flipOnClick={false}\r\n        onClick={() => this.props.flipCard(!this.props.isFlipped)}>\r\n        <FrontSide\r\n          style={{\r\n            background: \"rgb(189, 197, 201)\",\r\n            borderRadius: \"25px\",\r\n            boxShadow: \"2em 1em 1em rgba(0, 0, 0, 0.2)\",\r\n            padding: \"0px\",\r\n            display: \"block\",\r\n          }}>\r\n          <div className=\"kanji\">{this.props.Prompt}</div>\r\n        </FrontSide>\r\n        <BackSide\r\n          style={{\r\n            background: \"rgb(189, 197, 201)\",\r\n            borderRadius: \"25px\",\r\n            boxShadow: \"2em 1em 1em rgba(0, 0, 0, 0.2)\",\r\n            padding: \"0px\",\r\n          }}>\r\n          <div className=\"reading\">{this.props.Reading}</div>\r\n          <div className=\"definition\">{this.props.Definition}</div>\r\n        </BackSide>\r\n      </Flippy>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from \"react\";\r\nimport \"./DrawButton.css\";\r\n\r\nclass DrawButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.drawCard = this.drawCard.bind(this);\r\n  }\r\n\r\n  drawCard() {\r\n    this.props.drawCard();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"buttonContainer\">\r\n        <button className=\"btn\" onClick={this.drawCard}>\r\n          Draw Card\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DrawButton;\r\n","import React, { Component } from \"react\";\r\nimport \"./Lesson.css\";\r\nimport { MdDone, MdClear } from \"react-icons/md\";\r\n\r\nclass Lesson extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggleClass = this.toggleClass.bind(this);\r\n\r\n    this.state = {\r\n      lesson: props.lesson,\r\n    };\r\n  }\r\n\r\n  toggleClass() {\r\n    const currentLesson = this.state.lesson;\r\n    currentLesson.active = !currentLesson.active;\r\n    this.setState({ lesson: currentLesson });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <li className=\"lesson-list-item\" onClick={this.toggleClass}>\r\n        Lesson {this.props.lesson.number}\r\n        {this.state.lesson.active ? (\r\n          <MdDone className=\"lesson-icon\" />\r\n        ) : (\r\n          <MdClear className=\"lesson-icon\" />\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Lesson;\r\n","import React, { Component } from \"react\";\r\nimport \"./LessonSideBar.css\";\r\nimport Lesson from \"./Lesson/Lesson\";\r\n\r\nclass LessonSideBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      lessons: props.lessons,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"side-bar\">\r\n        <ul className=\"side-lessons\">\r\n          <li\r\n            className=\"lesson-list-item\"\r\n            onClick={this.props.toggleAllLessons}>\r\n            {this.props.activeLessons.length === 0 ? \"All\" : \"None\"}\r\n          </li>\r\n          {this.state.lessons.map((lesson) => (\r\n            <Lesson key={lesson.number} lesson={lesson} />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LessonSideBar;\r\n","import React from \"react\";\r\nimport { AiFillGithub } from \"react-icons/ai\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => (\r\n  <div className=\"topnav\">\r\n    <ul>\r\n      <li className=\"topnav-bold\">Kanji/Kana Flashcards</li>\r\n      <li className=\"topnav-right\">\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n          href=\"https://github.com/FlyLikeAPenguin/React-Flashcards\"\r\n          className=\"topnav-light\">\r\n          View on Github &nbsp;\r\n          <AiFillGithub className=\"icon\" />\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"./Card/Card\";\r\nimport \"./App.css\";\r\nimport DrawButton from \"./DrawButton/DrawButton\";\r\nimport cards from \"./Data/cards.json\";\r\nimport LessonSideBar from \"./LessonSideBar/LessonSideBar\";\r\nimport Header from \"./Header/Header\";\r\n\r\nconst lessonNumbers = Array.from(new Set(cards.map((x) => x.Lesson))).sort(\r\n  (a, b) => a - b\r\n);\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateCard = this.updateCard.bind(this);\r\n    this.toggleAllLessons = this.toggleAllLessons.bind(this);\r\n    this.flipCard = this.flipCard.bind(this);\r\n\r\n    this.state = {\r\n      currentCard: {},\r\n      isFlipped: false,\r\n\r\n      lessons: lessonNumbers.map((n) => ({\r\n        number: n,\r\n        active: true,\r\n        cards: cards.filter((k) => k.Lesson === n),\r\n      })),\r\n    };\r\n  }\r\n\r\n  setActiveLessons(activelessons) {\r\n    this.disableAllLessons();\r\n    activelessons.forEach(\r\n      (x) => (this.state.lessons.find((y) => y.number === x).active = true)\r\n    );\r\n  }\r\n\r\n  disableAllLessons() {\r\n    this.state.lessons.forEach((x) => (x.active = false));\r\n  }\r\n\r\n  toggleAllLessons() {\r\n    // If we currently have no active lessons, make them all active.\r\n    const active = this.activeLessons().length === 0;\r\n    this.state.lessons.forEach((x) => (x.active = active));\r\n    this.updateCard();\r\n  }\r\n\r\n  activeLessons() {\r\n    return this.state.lessons.filter((x) => x.active);\r\n  }\r\n\r\n  getRandomCard() {\r\n    var currentCards = this.state.lessons\r\n      .filter((l) => l.active === true)\r\n      .map((x) => x.cards)\r\n      .flat();\r\n\r\n    var randomIndex = Math.floor(Math.random() * currentCards.length);\r\n    var card = currentCards[randomIndex];\r\n    if (card === this.state.currentCard && card != null) {\r\n      this.getRandomCard();\r\n    }\r\n\r\n    return card;\r\n  }\r\n\r\n  flipCard(flipState) {\r\n    this.setState({ isFlipped: flipState });\r\n  }\r\n\r\n  updateCard() {\r\n    // If we're currently flipped, flip the card back so that the user doesn't see the answer.\r\n    // Delay getting the new card until the animation has finished.\r\n    // If we're not flipped, we can get the card immediately\r\n    if (this.state.isFlipped) {\r\n      this.flipCard(false);\r\n      setTimeout(() => {\r\n        this.setState({\r\n          currentCard: this.getRandomCard(),\r\n        });\r\n      }, 200);\r\n    } else {\r\n      this.setState({\r\n        currentCard: this.getRandomCard(),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const persistState = localStorage.getItem(\"active-lessons\");\r\n    if (persistState) {\r\n      try {\r\n        this.setActiveLessons(JSON.parse(persistState).map((x) => x.number));\r\n      } catch (e) {\r\n        console.log(\"Error parsing local storage.\");\r\n      }\r\n    }\r\n    this.setState({\r\n      currentCard: this.getRandomCard(),\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    localStorage.setItem(\r\n      \"active-lessons\",\r\n      JSON.stringify(this.activeLessons())\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <LessonSideBar\r\n          activeLessons={this.activeLessons()}\r\n          lessons={this.state.lessons}\r\n          toggleAllLessons={this.toggleAllLessons}\r\n        />\r\n        <div className=\"card-controls\">\r\n          <div className=\"card-row\">\r\n            <Card\r\n              Prompt={this.state.currentCard?.Prompt}\r\n              Definition={this.state.currentCard?.Definition}\r\n              Reading={this.state.currentCard?.Reading}\r\n              flipCard={this.flipCard}\r\n              isFlipped={this.state.isFlipped}\r\n            />\r\n          </div>\r\n          <div className=\"button-row\">\r\n            <DrawButton drawCard={this.updateCard} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}