{"version":3,"sources":["Card/Card.jsx","DrawButton/DrawButton.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","Kanji","Reading","Definition","DrawButton","drawCard","bind","this","onClick","Component","lessons","Array","from","Set","cards","map","x","Lesson","sort","a","b","n","number","active","filter","k","App","updateCard","state","currentCard","currentCards","setState","getRandomCard","l","flat","card","Math","floor","random","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"48kNAkBeA,EAfF,SAACC,GAAD,OACX,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAKA,UAAU,QAAf,SAAwBD,EAAME,UAGhC,sBAAKD,UAAU,YAAf,UACE,qBAAKA,UAAU,UAAf,SAA0BD,EAAMG,UAChC,qBAAKF,UAAU,aAAf,SAA6BD,EAAMI,sBCa5BC,G,8DArBb,WAAYL,GAAQ,IAAD,8BACjB,cAAMA,IAEDM,SAAW,EAAKA,SAASC,KAAd,gBAHC,E,4CAMnB,WACEC,KAAKR,MAAMM,a,oBAGb,SAAON,GACL,OACE,qBAAKC,UAAU,kBAAf,SACE,wBAAQA,UAAU,MAAMQ,QAASD,KAAKF,SAAtC,6B,GAdiBI,c,OCMnBC,EAHgBC,MAAMC,KAAK,IAAIC,IAAIC,EAAMC,KAAI,SAACC,GAAD,OAAOA,EAAEC,YAAUC,MACpE,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAEcL,KAAI,SAACM,GAAD,MAAQ,CACxCC,OAAQD,EACRE,QAAQ,EACRT,MAAOA,EAAMU,QAAO,SAACC,GAAD,OAAOA,EAAER,SAAWI,SA+D3BK,E,kDA3Db,WAAY3B,GAAQ,IAAD,8BACjB,cAAMA,IACD4B,WAAa,EAAKA,WAAWrB,KAAhB,gBAElB,EAAKsB,MAAQ,CACXd,MAAO,GACPe,YAAa,IANE,E,qDAUnB,WACE,IAAMC,EAAevB,KAAKqB,MAAMd,MAEhCP,KAAKwB,SAAS,CACZjB,MAAOgB,EACPD,YAAatB,KAAKyB,cAAcF,O,2BAIpC,WACE,IAAIA,EAAepB,EAChBc,QAAO,SAACS,GAAD,OAAoB,IAAbA,EAAEV,UAChBR,KAAI,SAACC,GAAD,OAAOA,EAAEF,SACboB,OAECC,EAAOL,EADOM,KAAKC,MAAMD,KAAKE,SAAWR,EAAaS,SAM1D,OAJIJ,IAAS5B,KAAKqB,MAAMC,aACtBtB,KAAKyB,cAAcF,GAGdK,I,wBAGT,WACE,IAAML,EAAevB,KAAKqB,MAAMd,MAChCP,KAAKwB,SAAS,CACZjB,MAAOgB,EACPD,YAAatB,KAAKyB,cAAcF,O,oBAIpC,WACE,OACE,sBAAK9B,UAAU,MAAf,UACE,qBAAKA,UAAU,UAAf,SACE,cAAC,EAAD,CACEC,MAAOM,KAAKqB,MAAMC,YAAY5B,MAC9BE,WAAYI,KAAKqB,MAAMC,YAAY1B,WACnCD,QAASK,KAAKqB,MAAMC,YAAY3B,YAGpC,qBAAKF,UAAU,YAAf,SACE,cAAC,EAAD,CAAYK,SAAUE,KAAKoB,sB,GArDnBlB,aCHH+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8ab6925f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-inner\">\r\n      <div className=\"card-front\">\r\n        <div className=\"kanji\">{props.Kanji}</div>\r\n      </div>\r\n\r\n      <div className=\"card-back\">\r\n        <div className=\"reading\">{props.Reading}</div>\r\n        <div className=\"definition\">{props.Definition}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Card;\r\n","import React, { Component } from \"react\";\r\nimport \"./DrawButton.css\";\r\n\r\nclass DrawButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.drawCard = this.drawCard.bind(this);\r\n  }\r\n\r\n  drawCard() {\r\n    this.props.drawCard();\r\n  }\r\n\r\n  render(props) {\r\n    return (\r\n      <div className=\"buttonContainer\">\r\n        <button className=\"btn\" onClick={this.drawCard}>\r\n          Draw Card\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DrawButton;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"./Card/Card\";\r\nimport \"./App.css\";\r\nimport DrawButton from \"./DrawButton/DrawButton\";\r\nimport cards from \"./Data/cards.json\";\r\n\r\nconst lessonNumbers = Array.from(new Set(cards.map((x) => x.Lesson))).sort(\r\n  (a, b) => a - b\r\n);\r\nconst lessons = lessonNumbers.map((n) => ({\r\n  number: n,\r\n  active: true,\r\n  cards: cards.filter((k) => k.Lesson === n),\r\n}));\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateCard = this.updateCard.bind(this);\r\n\r\n    this.state = {\r\n      cards: [],\r\n      currentCard: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const currentCards = this.state.cards;\r\n\r\n    this.setState({\r\n      cards: currentCards,\r\n      currentCard: this.getRandomCard(currentCards),\r\n    });\r\n  }\r\n\r\n  getRandomCard() {\r\n    var currentCards = lessons\r\n      .filter((l) => l.active === true)\r\n      .map((x) => x.cards)\r\n      .flat();\r\n    var randomIndex = Math.floor(Math.random() * currentCards.length);\r\n    var card = currentCards[randomIndex];\r\n    if (card === this.state.currentCard) {\r\n      this.getRandomCard(currentCards);\r\n    }\r\n\r\n    return card;\r\n  }\r\n\r\n  updateCard() {\r\n    const currentCards = this.state.cards;\r\n    this.setState({\r\n      cards: currentCards,\r\n      currentCard: this.getRandomCard(currentCards),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"cardRow\">\r\n          <Card\r\n            Kanji={this.state.currentCard.Kanji}\r\n            Definition={this.state.currentCard.Definition}\r\n            Reading={this.state.currentCard.Reading}\r\n          />\r\n        </div>\r\n        <div className=\"buttonRow\">\r\n          <DrawButton drawCard={this.updateCard} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}